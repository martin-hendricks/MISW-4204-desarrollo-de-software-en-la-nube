# ==========================================
# CONFIGURACIÓN DEL BACKEND DE TU COMPAÑERO
# ==========================================

# IP pública del backend de tu compañero
# Ejemplo: 3.XXX.XXX.XXX
BACKEND_PUBLIC_IP=

# Usuario SSH del backend (usualmente "ubuntu" para Ubuntu)
BACKEND_SSH_USER=ubuntu

# Ruta ABSOLUTA a la clave SSH del backend dentro de la instancia de performance
# Esta clave debe ser proporcionada por tu compañero
# Ejemplo: /home/ubuntu/backend-key.pem
BACKEND_SSH_KEY=/home/ubuntu/backend-key.pem

# ==========================================
# CONFIGURACIÓN DE REDIS (vía SSH Tunnel)
# ==========================================

# Redis se conectará vía túnel SSH al backend
# El producer se conectará a localhost:6379 que será tunelizado al backend remoto
# NO CAMBIAR estos valores a menos que sepas lo que haces
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_URL=redis://localhost:6379/0

# ==========================================
# CONFIGURACIÓN DE LA API (Acceso HTTP Directo)
# ==========================================

# URL base de la API del backend (sin barra final)
# Debe ser la IP pública del backend con http:// (puerto 80)
# Ejemplo: http://3.XXX.XXX.XXX
API_BASE_URL=http://

# Usuario de prueba para JMeter
# Este usuario debe existir en el backend o será creado automáticamente
TEST_USER_EMAIL=performance_test@example.com
TEST_USER_PASSWORD=PerformanceTest123!

# ==========================================
# CONFIGURACIÓN DE PROMETHEUS (Scraping de Métricas)
# ==========================================

# IP pública del backend para scraping de métricas (puerto 8000)
# Ejemplo: 3.XXX.XXX.XXX:8000
PROMETHEUS_BACKEND_TARGET=:8000

# IP pública del worker para scraping de métricas (puerto 8001)
# Ejemplo: 3.YYY.YYY.YYY:8001
# Si el worker está en la misma instancia que el backend, usa la misma IP
PROMETHEUS_WORKER_TARGET=:8001

# ==========================================
# CONFIGURACIÓN DE GRAFANA
# ==========================================

# Credenciales de administrador de Grafana
GF_SECURITY_ADMIN_USER=admin
GF_SECURITY_ADMIN_PASSWORD=admin

# ==========================================
# NOTAS IMPORTANTES
# ==========================================

# 1. Copia este archivo a .env y completa los valores
#    cp .env.example .env
#    nano .env

# 2. Obtén la clave SSH del backend de tu compañero y cópiala a la instancia:
#    scp -i "your-key.pem" backend-key.pem ubuntu@<PERFORMANCE_IP>:~/backend-key.pem
#    ssh -i "your-key.pem" ubuntu@<PERFORMANCE_IP>
#    chmod 400 ~/backend-key.pem

# 3. Asegúrate de que el Security Group del backend permita:
#    - SSH (22) desde la IP de tu instancia de performance
#    - HTTP (80) desde 0.0.0.0/0 o desde la IP de tu instancia
#    - Puerto 8000 desde la IP de tu instancia (métricas del backend)
#    - Puerto 8001 desde la IP de tu instancia (métricas del worker)

# 4. Actualiza el archivo prometheus.yml con las IPs correctas:
#    nano prometheus.yml
#    Reemplaza BACKEND_PUBLIC_IP y WORKER_PUBLIC_IP con las IPs reales

# 5. Ejecuta el script de túnel SSH antes de levantar Docker Compose:
#    ./setup-ssh-tunnel.sh

# 6. Levanta los servicios:
#    docker-compose up -d
