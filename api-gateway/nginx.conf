events {
    worker_connections 1024;
}

http {
    upstream backend {
        server backend:8000;
    }
        
    upstream auth_service {
        server auth-service:8001;
    }

    server {
        listen 80;
        
        location /health {
            return 200 '{"status":"healthy"}';
            add_header Content-Type application/json;
        }
        
        Authentication routes (según especificación API REST)
        location /api/auth/ {
            proxy_pass http://auth_service/api/auth/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Protected API routes (require authentication)
        location /api/ {
            # Auth subrequest to verify token
            auth_request /auth-verify;
            
            proxy_pass http://backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Authorization $http_authorization;
        }
        
        # Internal auth verification endpoint
        location = /auth-verify {
            internal;
            proxy_pass http://auth_service/api/auth/verify-token;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header Authorization $http_authorization;
        }
    
    }
}