version: '3.8'

services:
  # API Gateway
  api-gateway:
    build: ./api-gateway
    ports:
      - "80:80"
    depends_on:
      - backend
      - worker
    networks:
      - app-network
    restart: unless-stopped

  # Backend API
  backend:
    build: ./backend
    ports:
      - "8000:8000"
    environment:
      - TEST_MODE=false
      - DATABASE_URL=postgresql://user:password@database:5432/fileprocessing
      - REDIS_URL=redis://redis:6379/0
      - MINIO_URL=http://minio:9000
      - UPLOAD_DIR=/app/uploads
    depends_on:
      - database
      - redis
      - minio
    volumes:
      - uploads_data:/app/uploads
    networks:
      - app-network
    restart: unless-stopped

  # Task Processor Worker
  worker:
    build: ./worker
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=postgresql://user:password@database:5432/fileprocessing
      - REDIS_URL=redis://redis:6379/0
      - RABBITMQ_URL=amqp://user:password@broker:5672/
      - UPLOAD_DIR=/app/uploads
    depends_on:
      - database
      - redis
      - broker
    volumes:
      - uploads_data:/app/uploads
    networks:
      - app-network
    restart: unless-stopped

  # PostgreSQL Database
  database:
    build: ./database
    environment:
      - POSTGRES_DB=fileprocessing
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    restart: unless-stopped

  # RabbitMQ Message Broker
  broker:
    build: ./broker
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - app-network
    restart: unless-stopped

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:
  minio_data:
  uploads_data: