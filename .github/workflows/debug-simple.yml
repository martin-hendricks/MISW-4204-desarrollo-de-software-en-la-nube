name: Debug Simple

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  PYTHON_VERSION: '3.11'

jobs:
  debug:
    name: Debug Backend
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install dependencies
      run: |
        cd backend
        pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest

    - name: Test import
      run: |
        cd backend
        python3 -c "
        import sys
        print('Python version:', sys.version)
        print('Python path:', sys.path)
        
        try:
            from app_test_main import app
            print('✅ app_test_main imported successfully')
        except Exception as e:
            print('❌ Failed to import app_test_main:', e)
            import traceback
            traceback.print_exc()
        "

    - name: Test single function
      run: |
        cd backend
        python3 -c "
        try:
            from app_test_main import app
            from fastapi.testclient import TestClient
            client = TestClient(app)
            response = client.get('/')
            print('✅ App responds:', response.status_code)
            print('Response:', response.json())
        except Exception as e:
            print('❌ Failed to test app:', e)
            import traceback
            traceback.print_exc()
        "

    - name: Create database tables
      run: |
        cd backend
        export DATABASE_URL="sqlite:///./test.db"
        python3 -c "
        from app.infrastructure.database.database import engine, Base
        from app.infrastructure.database import models
        Base.metadata.create_all(bind=engine)
        print('✅ Database tables created successfully')
        "

    - name: Run one test
      run: |
        cd backend
        export DATABASE_URL="sqlite:///./test.db"
        pytest tests/test_basic.py::test_root_endpoint -v --tb=long
