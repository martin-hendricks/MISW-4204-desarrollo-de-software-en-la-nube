name: Test Backend Only

on:
  push:
    branches: [ main, develop ]
    paths: [ 'backend/**' ]
  pull_request:
    branches: [ main, develop ]
    paths: [ 'backend/**' ]

env:
  PYTHON_VERSION: '3.11'

jobs:
  test-backend:
    name: Test Backend
    runs-on: ubuntu-latest
    
    services:
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg

    - name: Install backend dependencies
      run: |
        cd backend
        pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest-cov

    - name: Run backend tests (SQLite)
      run: |
        cd backend
        export DATABASE_URL="sqlite:///./test.db"
        export REDIS_URL="redis://localhost:6379/0"
        export TEST_MODE=true
        export UPLOAD_DIR="/tmp/test_uploads"
        mkdir -p /tmp/test_uploads/original /tmp/test_uploads/processed
        
        # Crear las tablas de la base de datos
        python3 -c "
        from app.infrastructure.database.database import engine, Base
        from app.infrastructure.database import models
        Base.metadata.create_all(bind=engine)
        print('✅ Database tables created successfully')
        "
        
        # Ejecutar las pruebas usando app_test_main (que ya tiene la configuración correcta)
        pytest tests/ -v --cov=app --cov-report=xml --cov-report=html

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        files: ./backend/coverage.xml
        flags: backend-tests
        name: backend-coverage
